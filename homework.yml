---
- name: Generate inventory file on bastion
  hosts: localhost
  vars:
    guid: dummyvalue
    ldap_ca_path: dummyvalue
    default_inventory_file: /etc/ansible/hosts
  tasks:
    - name: Copy inventory file from source
      copy:
        src: "{{playbook_dir}}/ansible_inventory"
        dest: "{{default_inventory_file}}"
    - name: Get GUID from host name
      shell: hostname|awk -F. '{print $2}'
      register: guid_output
    - name: Set GUID variable
      set_fact:
        guid: "{{guid_output.stdout}}"
    - name: Replace GUID in ansible inventory
      replace:
        path: "{{default_inventory_file}}"
        regexp: 'PLACEHOLDER_GUID'
        replace: "{{guid}}"
    - name: Reload inventory file to capture updates
      meta: refresh_inventory

- name: Validate Docker configuration on nodes
  hosts: nodes
  tasks:
    - name: Install Docker if necessary
      package:
        name: docker
        state: present
    - name: Start Docker service if necessary
      service:
        name: docker
        state: started

- name: Validate OpenShift packages on bastion
  hosts: localhost
  tasks:
    - name: Install OpenShift utils package if necessary
      package:
        name: atomic-openshift-utils
        state: present
    - name: Install OpenShift clients package if necesary
      package:
        name: atomic-openshift-clients
        state: present

- name: Check OpenShift pre-requisites
  import_playbook: /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml

- name: Run OpenShift installer
  import_playbook: /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml

- name: Copy .kube directory from master to bastion
  hosts: masters[0]
  tasks:
    - name: Copy .kube directory
      fetch:
        src: /root/.kube/config
        dest: /root/.kube/config
        flat: yes

- name: Validate OSE admin login
  hosts: localhost
  tasks:
    - name: Validate that oc admin command returns systemadmin
      shell: oc whoami | grep system:admin

- name: Create PVs on NFS server
  hosts: nfs
  tasks:
    - name: Create PVs
      script: "{{playbook_dir}}/scripts/create_pvs.sh"
    - name: Restart NFS service
      service:
          name: nfs-server
          state: restarted

- name: Create PVs on OSE
  hosts: localhost
  tasks:
    - name: Create PV definition files
      script: "{{playbook_dir}}/scripts/create_pv_definitions.sh"
    - name: Create PVs
      shell: cat /root/pvs/* | oc create -f -

- name: Fix NFS persistent volume recycling
  hosts: nodes
  tasks:
    - name: Pull latest container image
      shell: docker pull registry.access.redhat.com/openshift3/ose-recycler:latest
    - name: Tag latest container image
      shell: docker tag registry.access.redhat.com/openshift3/ose-recycler:latest registry.access.redhat.com/openshift3/ose-recycler:v3.9.30

- name: Smoke test
  hosts: localhost
  tasks:
    - name: Create new project
      shell: oc new-project smoke-test
    - name: Create Node.JS application
      shell: oc new-app nodejs-mongo-persistent

- name: Create CI/CD workflow
  hosts: localhost
  tasks:
    - name: Create Jenkins project
      shell: oc new-project jenkins
    - name: Create Jenkins app
      shell: oc new-app jenkins-persistent

- name: Deploy openshift-tasks app with Jenkins
  hosts: localhost
    - name: Create Jenkins pipeline
      shell: "oc create -f {{playbook_dir}}/openshift-tasks-pipeline.yaml"
    - name: Start Jenkins pipeline to deploy openshift-tasks app
      shell: oc start-build openshift-tasks-pipeline
    - name: Configure HPA on app
      shell: oc autoscale openshift-tasks-pipeline --min 1 --max 2 --cpu-percent=80